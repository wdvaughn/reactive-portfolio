{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","pages/About.js","pages/Contact.js","components/Card/index.js","pages/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Footer","About","src","alt","height","Contact","for","type","name","value","readonly","rows","cols","Card","title","image","href","Portfolio","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f6d48d66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light d-flex\">\r\n      <h1 className=\"navbar-brand text-light mr-auto px-3 logo\">William Vaughn</h1>\r\n      <Link className=\"px-3\" to=\"/\">About</Link>\r\n      <Link className=\"px-3\" to=\"/contact\">Contact</Link>\r\n      <Link className=\"px-3\" to=\"/portfolio\">Portfolio</Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"p-3\">\r\n      <p>copyright</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <section className=\"container p-3\">\r\n      <h1>About Me</h1>\r\n      <div className=\"content clearfix\">\r\n        <img src=\"/images/will-photo-s.jpg\" alt=\"William Vaughn\" height=\"200px\" className=\"p-3 clearfix\" />\r\n        <p className=\"p-3\">My name is William Vaughn. I am a NC state graduate with a bachelor's degree in mathematics\r\n            and a minor in computer programming. I am working on developing a portfolio as part of a coding bootcamp.\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nfunction Contact() {\r\n  return (\r\n    <section className=\"container mx-3\">\r\n      <h1 > Contact</h1>\r\n      <div className=\"content\">\r\n        <div>\r\n          <label for=\"name\">Name</label>\r\n          <input type=\"text\" name=\"name\" value=\"William Vaughn\" readonly />\r\n        </div>\r\n        <div>\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"text\" name=\"email\" value=\"will.d.vaughn@gmail.com\" readonly />\r\n        </div>\r\n        <div>\r\n          <label for=\"message\">Message</label>\r\n          <textarea type=\"text\" name=\"message\" rows=\"5\" cols=\"40\"></textarea>\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\n\r\nconst Card = ({ title, image, href, alt }) => {\r\n  return (\r\n    <a href={href}>\r\n      <div className=\"pic m-3\">\r\n        <img src={image} alt={alt} height=\"200px\" />\r\n        <div className=\"caption p-3\">{title}</div>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"../components/Card\";\r\n\r\nfunction Portfolio() {\r\n  return (\r\n    <section className=\"container\">\r\n      <h1>Portfolio</h1>\r\n      <div className=\"content clearfix\">\r\n        <Card href=\"https://wdvaughn.github.io/password-generator/\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Password Generator\" />\r\n\r\n        <Card href=\"https://wdvaughn.github.io/code-quiz/\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Code Quiz\" />\r\n\r\n        <Card href=\"https://wdvaughn.github.io/day-planner/\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Day Planner\" />\r\n\r\n        <Card href=\"https://wdvaughn.github.io/weather-api/\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Weather API\" />\r\n\r\n        <Card href=\"https://wdvaughn.github.io/node-profile-generator/index.html\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Developer Profile Generator\" />\r\n\r\n        <Card href=\"https://serene-eyrie-74606.herokuapp.com/\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Note Taker\" />\r\n\r\n        <Card href=\"https://frozen-ocean-30927.herokuapp.com/\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Burger\" />\r\n\r\n        <Card href=\"https://thawing-taiga-84237.herokuapp.com/?id=5e7d5842e6a7bd0017562d82\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"Fitness Tracker\" />\r\n\r\n        <Card href=\"https://pacific-depths-50534.herokuapp.com/\" image=\"https://via.placeholder.com/200\" alt=\"filler\" title=\"User Directory\" />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Portfolio; ","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Portfolio from './pages/Portfolio';\n\nfunction App() {\n  return (\n    <Router>\n      <div >\n        <Header />\n        <Route exact path=\"/reactive-portfolio/\" component={About} />\n        <Route exact path=\"/reactive-portfolio/contact\" component={Contact} />\n        <Route exact path=\"/reactive-portfolio/portfolio\" component={Portfolio} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}